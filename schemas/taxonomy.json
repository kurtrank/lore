{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "https://raw.githubusercontent.com/kurtrank/lore/refs/heads/main/schemas/taxonomy.json",
	"title": "Taxonomy",
	"description": "Custom taxonomy to be registered with WordPress",
	"type": "object",
	"properties": {
		"label": {
			"type": "string",
			"description": "Name of the post type shown in the menu. Usually plural. Defaults to `labels.name`"
		},
		"description": {
			"type": "string",
			"description": "A short descriptive summary of what the taxonomy is for"
		},
		"public": {
			"type": "boolean",
			"description": "Whether a taxonomy is intended for use publicly either via the admin interface or by front-end users",
			"default": false
		},
		"publicly_queryable": {
			"type": "boolean",
			"description": "Whether the taxonomy is publicly queryable. If not set, the default is inherited from `public`"
		},
		"hierarchical": {
			"type": "boolean",
			"description": "Whether the taxonomy is hierarchical. Defaults to `false`",
			"default": false
		},
		"show_ui": {
			"type": "boolean",
			"description": "Whether to generate and allow a UI for managing terms in this taxonomy in the admin. Default is value of `public`"
		},
		"show_in_menu": {
			"type": "boolean",
			"description": "Where to show the post type in the admin menu. To work, `show_u` must be true. If string, will be placed as a sub-menu of that item. Default is value of `show_ui`"
		},
		"show_in_nav_menus": {
			"type": "boolean",
			"description": "Makes this taxonomy available for selection in navigation menus. Default is value of `public`"
		},
		"show_in_rest": {
			"type": "boolean",
			"description": "Whether to include the taxonomy in the REST API. Set this to true for the taxonomy to be available in the block editor"
		},
		"rest_base": {
			"type": "string",
			"description": "To change the base url of REST API route. Default is `taxonomy`"
		},
		"rest_namespace": {
			"type": "string",
			"description": "To change the namespace URL of REST API route",
			"defualt": "wp/v2"
		},
		"rest_controller_class": {
			"type": "string",
			"description": "REST API controller class name",
			"defualt": "WP_REST_Terms_Controller"
		},
		"show_tagcloud": {
			"type": "boolean",
			"description": "Whether to list the taxonomy in the Tag Cloud Widget controls. If not set, the default is inherited from `show_ui`"
		},
		"show_in_quick_edit": {
			"type": "boolean",
			"description": "Whether to show the taxonomy in the quick/bulk edit panel. If not set, the default is inherited from `show_ui`"
		},
		"show_admin_column": {
			"type": "boolean",
			"description": "Whether to display a column for the taxonomy on its post type listing screens",
			"default": false
		},
		"meta_box_cb": {
			"type": ["string", "array"],
			"description": "Provide a callback function for the meta box display. If not set, post_categories_meta_box() is used for hierarchical taxonomies, and post_tags_meta_box() is used for non-hierarchical. If false, no meta box is shown"
		},
		"meta_box_sanitize_cb": {
			"type": ["string", "array"],
			"description": "Provide a callback function for the meta box display. If not set, post_categories_meta_box() is used for hierarchical taxonomies, and post_tags_meta_box() is used for non-hierarchical. If false, no meta box is shown"
		},
		"capabilities": {
			"type": "array",
			"description": "Array of capabilities for this taxonomy",
			"items": {
				"type": "string"
			}
		},
		"rewrite": {
			"type": ["boolean", "object"],
			"description": "Triggers the handling of rewrites for this taxonomy. Default true, using $taxonomy as slug. To prevent rewrite, set to false",
			"properties": {
				"slug": {
					"type": "string",
					"description": "Customize the permastruct slug. Defaults to `taxonomy` key"
				},
				"with_front": {
					"type": "boolean",
					"description": "Whether the permastruct should be prepended with WP_Rewrite::$front",
					"default": true
				},
				"hierarchical": {
					"type": "boolean",
					"description": "Either hierarchical rewrite tag or not",
					"default": false
				},
				"ep_mask": {
					"type": "integer",
					"description": "Assign an endpoint mask",
					"default": "EP_NONE"
				}
			}
		},
		"query_var": {
			"type": ["boolean", "string"],
			"description": "Sets the query var key for this taxonomy. Defaults to `taxonomy` key"
		},
		"update_count_callback": {
			"type": ["string", "array"],
			"description": "Works much like a hook, in that it will be called when the count is updated. Default _update_post_term_count() for taxonomies attached to post types, which confirms that the objects are published before counting them. Default _update_generic_term_count() for taxonomies attached to other object types, such as users"
		},
		"default_term": {
			"type": ["string", "object"],
			"description": "Default term to be used for the taxonomy",
			"properties": {
				"name": {
					"type": "string",
					"description": "Name of default term"
				},
				"slug": {
					"type": "string",
					"description": "Slug for default term"
				},
				"description": {
					"type": "string",
					"description": "Description for default term"
				}
			}
		},
		"sort": {
			"type": "boolean",
			"description": "Whether terms in this taxonomy should be sorted in the order they are provided to wp_set_object_terms()",
			"default": false
		}
	}
}
